package pages

import "script_validation/views/components"
import "script_validation/models"
import "fmt"

templ ConversationPage(conversation *models.Conversation) {
	@Layout() {
		@Nav()
		<div class="container mx-auto max-w-4xl py-8 px-4">
			<div class="py-4">
				@components.ValidationForm(conversation)
				<div class="text-xl align-center">
					{ conversation.Name }
				</div>
				@Messages(conversation.Messages)
			</div>
		</div>
	}
}

templ Messages(messages []models.Message) {
	<div class="p-2 flex flex-col space-y-4" id="messages">
		for _, msg := range messages {
			<div class="p-4 border border-solid rounded-xl">
				<div class="text-md font-bold">{ msg.Role }</div>
				<div class="text-md">{ msg.Content }</div>
				<div class="flex flex-col px-4 space-y-2">
					for i, evaluation := range msg.MessageEvaluations {
						@Evaluation(evaluation, i)
					}
				</div>
			</div>
		}
	</div>
}

templ Evaluation(evaluation models.MessageEvaluation, index int) {
	<details open?={ index == 0 }>
		<summary class="text-md">
			<b>{ evaluation.LLM.Name }: </b>
			<span>{ fmt.Sprintf("%.2f", evaluation.AverageSimilarity*100) }%</span>
		</summary>
		<div class="flex flex-col space-y-2">
			Prompt: { evaluation.Prompt.Content }
			for _, result := range evaluation.MessageEvaluationResults {
				<div class="text-md flex space-x-2">
					<div>{ SimilarityToString(result.Similarity) }%: <br/> { LatencyMsToString(result.LatencyMs) }</div>
					<div class="w-full">{ result.Content }</div>
				</div>
			}
		</div>
	</details>
}

func SimilarityToString(similarity float64) string {
	return fmt.Sprintf("%.2f", similarity*100)
}

func LatencyMsToString(latencyMs int) string {
	return fmt.Sprintf("%.2fs", float64(latencyMs)/1000.0)
}
