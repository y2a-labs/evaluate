package pages

import "script_validation/models"
import "fmt"


templ ConversationPage(conversation *models.Conversation) {
	@Layout() {
		@Nav()
		<div class="container mx-auto max-w-4xl py-8 px-4">
			@ValidationForm(conversation)
			<div class="text-xl align-center">
				{ conversation.Name }
			</div>
			@Messages(conversation.Messages)
		</div>
	}
}


templ Messages(messages []models.Message) {
	<div class="py-2 flex flex-col" id="messages">
		for _, msg := range messages {
			@Message(msg) {
				<div class="flex flex-col space-y-2">
					for _, evaluation := range msg.MessageEvaluations {
						@Evaluation(evaluation)
					}
				</div>
			}
		}
	</div>
}

templ Message(msg models.Message) {
	<div class="pt-4 text-lg group" x-data={ "{edit: false, content: ''}" }>
		<div class="font-bold"><span class="ml-auto">{fmt.Sprintf("%d", msg.MessageIndex)}</span>: { msg.Role }</div>
		<div x-show="!edit" class="">{ msg.Content }</div>
		{ children... }
		<div x-show="edit" class="">
			@EditMessage(msg)
		</div>
		<button x-show="!edit" x-on:click="edit = ! edit" class="invisible group-hover:visible">
			<svg class="h-5 mt-2 hover:fill-slate-600 fill-slate-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
				<!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
				<path d="M441 58.9L453.1 71c9.4 9.4 9.4 24.6 0 33.9L424 134.1 377.9 88 407 58.9c9.4-9.4 24.6-9.4 33.9 0zM209.8 256.2L344 121.9 390.1 168 255.8 302.2c-2.9 2.9-6.5 5-10.4 6.1l-58.5 16.7 16.7-58.5c1.1-3.9 3.2-7.5 6.1-10.4zM373.1 25L175.8 222.2c-8.7 8.7-15 19.4-18.3 31.1l-28.6 100c-2.4 8.4-.1 17.4 6.1 23.6s15.2 8.5 23.6 6.1l100-28.6c11.8-3.4 22.5-9.7 31.1-18.3L487 138.9c28.1-28.1 28.1-73.7 0-101.8L474.9 25C446.8-3.1 401.2-3.1 373.1 25zM88 64C39.4 64 0 103.4 0 152V424c0 48.6 39.4 88 88 88H360c48.6 0 88-39.4 88-88V312c0-13.3-10.7-24-24-24s-24 10.7-24 24V424c0 22.1-17.9 40-40 40H88c-22.1 0-40-17.9-40-40V152c0-22.1 17.9-40 40-40H200c13.3 0 24-10.7 24-24s-10.7-24-24-24H88z"></path>
			</svg>
		</button>
	</div>
}

templ EditMessage(msg models.Message) {
	<form hx-patch={ "/messages/" + msg.ID }>
		<textarea name="content">{ msg.Content }</textarea>
		<button type="submit">Save</button>
	</form>
}

templ Evaluation(evaluation models.MessageEvaluation) {
	<details>
		<summary class="text-md" id={ evaluation.ID }>
			<b>{ evaluation.LLM.ID }: </b>
			<span>{ fmt.Sprintf("%.2f", evaluation.AverageSimilarity*100) }%</span>
		</summary>
		<div class="flex flex-col space-y-2">
			for _, result := range evaluation.MessageEvaluationResults {
				<div class="text-md flex space-x-2">
					<div>{ SimilarityToString(result.Similarity) }%: <br/> { LatencyMsToString(result.LatencyMs) }</div>
					<div class="w-full">{ result.Content }</div>
				</div>
			}
		</div>
	</details>
}

func SimilarityToString(similarity float64) string {
	return fmt.Sprintf("%.2f", similarity*100)
}

func LatencyMsToString(latencyMs int) string {
	return fmt.Sprintf("%.2fs", float64(latencyMs)/1000.0)
}

type llm struct {
	Name    string
	Checked bool
}

var llms = []llm{
	{Name: "openrouter/openchat/openchat-7b", Checked: true},
	{Name: "groq/llama2-70b-4096", Checked: true},
	{Name: "groq/gryphe/mythomax-l2-13b", Checked: false},
	{Name: "openrouter/mistralai/mixtral-8x7b-instruct", Checked: true},
}

func isChecked(model string, evalModels []string) bool {
	for _, evalModel := range evalModels {
		if model == evalModel {
			return true
		}
	}
	return false
}

func IntToString(i int) string {
	return fmt.Sprintf("%d", i)
}

templ ValidationForm(conversation *models.Conversation) {
	<form hx-post={ fmt.Sprintf("/conversations/%s/evaluate", conversation.ID) } class="flex flex-col space-y-2" hx-target="#messages" hx-swap="outerHTML" enctype="multipart/form-data" hx-indicator="#spinner">
		<label for="prompt">
			<span>Prompt</span>
			<textarea name="prompt" class="textarea rounded-lg w-full text-md" placeholder="Enter your prompt">{ conversation.EvalPrompt }</textarea>
		</label>
		<label for="test_count">
			<span>Test Count:</span>
			<input type="number" class="rounded-lg" min="1" max="20" value={IntToString(conversation.EvalTestCount)} name="test_count"></input>
		</label>
		<label for="start_index">
			<span>Start Index:</span>
			<input type="number" class="rounded-lg" min="0" max={IntToString(len(conversation.Messages))} value={IntToString(conversation.EvalStartIndex)} name="start_index"></input>
		</label>
		<label for="end_index">
			<span>End Index:</span>
			<input type="number" class="rounded-lg" min="0" max={IntToString(len(conversation.Messages))} value={IntToString(conversation.EvalEndIndex)} name="end_index"></input>
		</label>
		<div>
			<span class="text-lg">Models:</span>
			<div class="grid md:grid-cols-2 gap-4">
				for _, model := range llms {
					<label for="models">
						<input type="checkbox" name="models" checked?={ isChecked(model.Name, conversation.EvalModels) } value={ model.Name }/>
						<span>{ model.Name }</span>
					</label>
				}
			</div>
		</div>
		<div class="flex flex-row items-center">
			<button type="submit" class="border border-solid bg-slate-200 hover:bg-slate-300 rounded-xl px-4 py-2">
				Submit
			</button>
			<svg xmlns="http://www.w3.org/2000/svg" class="h-6 animate-spin htmx-indicator" id="spinner" viewBox="0 0 512 512">
				<!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
				<path d="M304 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zm0 416a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM48 304a48 48 0 1 0 0-96 48 48 0 1 0 0 96zm464-48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM142.9 437A48 48 0 1 0 75 369.1 48 48 0 1 0 142.9 437zm0-294.2A48 48 0 1 0 75 75a48 48 0 1 0 67.9 67.9zM369.1 437A48 48 0 1 0 437 369.1 48 48 0 1 0 369.1 437z"></path>
			</svg>
		</div>
	</form>
}