// Generated by server.go.tmpl
package service

import (
	"github.com/y2a-labs/evaluate/models"
)

func (s *Service) GetPrompt(id string) (*models.Prompt, error) {
	prompt := &models.Prompt{BaseModel: models.BaseModel{ID: id}}
	tx := s.Db.First(prompt)
	if tx.Error != nil {
		return nil, tx.Error
	}
	return prompt, nil
}

func (s *Service) CreatePrompt(input models.PromptCreate) (*models.Prompt, error) {
	prompt := &models.Prompt{}
	tx := s.Db.Create(prompt)
	if tx.Error != nil {
		return nil, tx.Error
	}
	return prompt, nil
}

func (s *Service) GetAllPrompts() (*[]models.Prompt, error) {
	prompts := &[]models.Prompt{}
	tx := s.Db.Find(prompts)
	if tx.Error != nil {
		return nil, tx.Error
	}
	return prompts, nil
}

func (s *Service) UpdatePrompt(id string, input models.PromptUpdate) (*models.Prompt, error) {
	// Find the prompt
	prompt := &models.Prompt{BaseModel: models.BaseModel{ID: id}}
	tx := s.Db.First(prompt)
	if tx.Error != nil {
		return nil, tx.Error
	}
	// Make a copy of the original prompt
	promptCopy := &models.Prompt{
		Content: input.Content,
		AgentID: prompt.AgentID,
		BasePromptID: prompt.ID,
		Version: prompt.Version,
	}
	tx = s.Db.Create(promptCopy)
	if tx.Error != nil {
		return nil, tx.Error
	}

	// Apply the updates to the prompt
	prompt.Content = input.Content
	prompt.Version = prompt.Version + 1
	tx = s.Db.Updates(prompt)
	if tx.Error != nil {
		return nil, tx.Error
	}
	return prompt, nil
}

func (s *Service) DeletePrompt(id string) (*models.Prompt, error) {
	prompt := &models.Prompt{BaseModel: models.BaseModel{ID: id}}

	tx := s.Db.First(prompt)
	if tx.Error != nil {
		return nil, tx.Error
	}
	tx = s.Db.Delete(prompt)
	if tx.Error != nil {
		return nil, tx.Error
	}
	return nil, nil
}

type PromptManager interface {
	GetPrompt(id string) (*models.Prompt, error)
	CreatePrompt(*models.PromptCreate) (*models.Prompt, error)
	GetAllPrompts() ([]*models.Prompt, error)
	UpdatePrompt(id string, input models.PromptUpdate) (*models.Prompt, error)
	DeletePrompt(id string) (any, error)
}

/*
Append these structs to your models file if you don't have them already
type Prompt struct {
	// TODO add ressources
	ID string `json:"id"`
}

type PromptCreate struct {
	// TODO add ressources
	ID string `json:"id"`
}

type PromptUpdate struct {
	// TODO add ressources
	ID string `json:"id"`
}
*/